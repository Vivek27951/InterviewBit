Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? 

Find all unique triplets in the array which gives the sum of zero.

Note:

Elements in a triplet (a,b,c) must be in non-descending order. (ie, a ≤ b ≤ c)

The solution set must not contain duplicate triplets.

For example, given array S = {-1 0 1 2 -1 -4},

A solution set is:

  (-1, 0, 1)

  (-1, -1, 2)
  
  
  
  
  
  
  
  vector<vector<int> > Solution::threeSum(vector<int> &A) {
    sort(A.begin(),A.end());
    long long n = A.size();
    vector<vector<int> >v;
    set<vector<int>>u;
    for(int i=0;i<n-2;i++)
    {
        long long s = i+1;
        long long e = n-1;
        while(s<e)
        {
            long long sum = (long long)A[i]+(long long)A[s]+(long long)A[e];
            if(sum==0)
            {
                vector<int>temp;
                temp.push_back(A[i]);
                temp.push_back(A[s]);
                temp.push_back(A[e]);
                if(u.find(temp)==u.end())
                {
                    v.push_back(temp);
                    u.insert(temp);
                }
                s++;
            }
            else if(sum<0)
                s++;
            else
                e--;
        }
    }
    return v;
}
