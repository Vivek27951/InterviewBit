Given a string containing only digits, restore it by returning all possible valid IP address combinations.

A valid IP address must be in the form of A.B.C.D, where A,B,C and D are numbers from 0-255. The numbers cannot be 0 prefixed unless they are 0.

Example:

Given “25525511135”,

return [“255.255.11.135”, “255.255.111.35”]. (Make sure the returned strings are sorted in order)










vector<string> Solution::restoreIpAddresses(string A) {
    int n = A.size();
    int count =0;
    vector<string> v;
    if(n>12)
        return v;
    for(int i=1;i<n;i++)
    {
        for(int j=i+1;j<n;j++)
        {
            for(int k=j+1;k<n;k++)
            {
                string a = A.substr(0,i);
                string b = A.substr(i,j-i);
                string c = A.substr(j,k-j);
                string d = A.substr(k);
                int ai = stoi(a);
                int bi = stoi(b);
                int ci = stoi(c);
                int di = stoi(d);
                if(a[0]=='0' && a.size()!=1)continue;
                if(b[0]=='0' && b.size()!=1)continue;
                if(c[0]=='0' && c.size()!=1)continue;
                if(d[0]=='0' && d.size()!=1)continue;
                if(ai>=0 && ai<=255 && bi>=0 && bi<=255 && ci>=0 && ci<=255 && di>=0 && di<=255)
                {
                    string t = a+"."+b+"."+c+"."+d;
                    v.push_back(t);
                }
            }
        }
    }
    return v;
}
