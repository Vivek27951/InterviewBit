Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target. 

Return the sum of the three integers.

Assume that there will only be one solution

Example: 

given array S = {-1 2 1 -4}, 

and target = 1.

The sum that is closest to the target is 2. (-1 + 2 + 1 = 2)







int Solution::threeSumClosest(vector<int> &A, int B) {
    sort(A.begin(),A.end());
    int n = A.size();
    int d = INT_MAX;
    int t = 0;
    for(int i=0;i<n-2;i++)
    {
        int s = i+1;
        int e = n-1;
        while(s<e)
        {
            int sum = A[i]+A[s]+A[e];
            if(abs(sum-B)<d)
            {
                t = sum;
                d = abs(sum-B);
            }
            if(sum<B)
                s++;
            else if(sum>B)
                e--;
            else
                return B;
        }
    }
    return t;
}
