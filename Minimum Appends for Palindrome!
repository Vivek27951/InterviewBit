Problem Description

Given a string A consisting of lowercase characters.

We need to tell minimum characters to be appended (insertion at end) to make the string A a palindrome.



Problem Constraints
1 <= |A| <= 105

A consists only of lower-case characters.



Input Format
First argument is an string A.



Output Format
Return a integer denoting the minimum characters to be appended (insertion at end) to make the string A a palindrome.



Example Input
Input 1:

 A = "abede"
Input 2:

 A = "aabb"


Example Output
Output 1:

 2
Output 2:

 2


Example Explanation
Explanation 1:

 We can make string palindrome as "abedeba" by adding ba at the end of the string.
Explanation 2:

 We can make string palindrome as "aabbaa" by adding aa at the end of the string.
 
 
 
 
 
 
 
 
 
 int Solution::solve(string A) {
    int n = A.size();
    int s = 0;
    int e = n-1;
    int index ;
    while(s<n)
    {
        if(A[s]==A[n-1])
        {
            index = s;
            e = n-1;
            while(s<=e)
            {
                if(A[s]!=A[e])
                    break;
                s++;e--;
            }
            if(s>e)
                return index;
        }
        else   
            s++;
    }
    return n-1;
}
