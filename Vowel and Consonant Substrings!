Problem Description

Given a string A consisting of lowercase characters.

You have to find the number of substrings in A which starts with vowel and end with consonants or vice-versa.

Return the count of substring modulo 109 + 7.

Problem Constraints
1 <= |A| <= 105

A consists only of lower-case characters.

Input Format
First argument is an string A.

Output Format
Return a integer denoting the the number of substrings in A which starts with vowel and end with consonants or vice-versa with modulo 109 + 7.

Example Input
Input 1:

 A = "aba"
Input 2:

 A = "a"


Example Output
Output 1:

 2
Output 2:

 0


Example Explanation
Explanation 1:

 Substrings of S are : [a, ab, aba, b, ba, a]Out of these only 'ab' and 'ba' satisfy the condition for special Substring. So the answer is 2.
Explanation 2:

 No possible substring that start with vowel and end with consonant or vice-versa.
 
 
 
 
 
 
 
 
 int Solution::solve(string A) {
    int n = A.size();
    int count = 0;
    int m = 1000000007;
    vector<int>b(n+2,0);
    for(int i=n-1;i>=0;i--)
    {
        if(A[i]=='a' || A[i]=='e' || A[i]=='i' || A[i]=='o' || A[i]=='u')
            b[i+1] = b[i+2]+1;
        else
            b[i+1] = b[i+2];
    }
    for(int i=1;i<=n;i++)
    {
        if(A[i-1]=='a' || A[i-1]=='e' || A[i-1]=='i' || A[i-1]=='o' || A[i-1]=='u')
        {
            count = ( count + (n-i-b[i+1]) )%m;
        }
        else{
            count = (count + b[i+1])%m;
        }
    }
    return count;
}
