Given an unsorted integer array, find the first missing positive integer.

Example:

Given [1,2,0] return 3,

[3,4,-1,1] return 2,

[-8, -7, -6] returns 1

Your algorithm should run in O(n) time and use constant space.








int Solution::firstMissingPositive(vector<int> &A) {
    int maxi = 100000000;
    int mini = -100000000;
    int num = maxi+abs(mini)+1;
    int n = A.size();
    for(int i=0;i<n;i++)
    {
        int temp = A[i];
        if(temp>maxi)
        {
            temp = temp-num;
        }
        if(temp>0 && temp<=n)
        {
            A[temp-1]+=num;
        }
    }
    for(int i=0;i<n;i++)
    {
        if(A[i]<maxi)
            return i+1;
    }
    return n+1;
}
